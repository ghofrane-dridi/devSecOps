version: '3.8'

services:
  nexus:
    image: sonatype/nexus3:latest
    container_name: nexus
    restart: unless-stopped
    ports:
      - "8181:8081"
    volumes:
      - devsecops_nexus-data:/nexus-data
    networks:
      - devsecops-network

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    restart: unless-stopped
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    depends_on:
      - db
    networks:
      - devsecops-network

  db:
    image: postgres:13
    container_name: sonardb
    restart: unless-stopped
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - devsecops_sonar-db:/var/lib/postgresql/data
    networks:
      - devsecops-network

  mysqldb:
    image: mysql:8
    container_name: mysqldb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: demo
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    ports:
      - "3306:3306"
    volumes:
      - devsecops_db_data:/var/lib/mysql
    networks:
      - devsecops-network

  springapp:
    build: .
    container_name: springapp
    depends_on:
      - mysqldb
    ports:
      - "8001:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb:3306/demo
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    networks:
      - devsecops-network

volumes:
  devsecops_nexus-data:
    external: true
  devsecops_db_data:
    external: false
  devsecops_sonar-db:
    external: false

networks:
  devsecops-network:
    driver: bridge
